<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>技术 on EtherealBoyJiang</title>
        <link>http://localhost:1313/Jiang/tags/%E6%8A%80%E6%9C%AF/</link>
        <description>Recent content in 技术 on EtherealBoyJiang</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>EtherealBoyJiang</copyright>
        <lastBuildDate>Fri, 26 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/Jiang/tags/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Jmeter测试计划</title>
        <link>http://localhost:1313/Jiang/p/jmeter%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/</link>
        <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/Jiang/p/jmeter%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/</guid>
        <description>&lt;img src="http://localhost:1313/Jiang/img/Jmeter/0.png" alt="Featured image of post Jmeter测试计划" /&gt;&lt;h1 id=&#34;测试计划&#34;&gt;&lt;em&gt;测试计划&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;可以将测试计划可视化为用于运行测试的JMeter脚本。测试计划由测试元素组成，例如线程组，逻辑控制器，样本生成控制器，监听器，定时器，断言和配置元素。 每个测试计划中至少应有一个线程组。 我们可以根据要求添加或删除元素。 前言中的快速开始就是一个测试计划。&lt;/p&gt;
&lt;p&gt;测试计划控制面板中的元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;名称和注释&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;用户定义的变量&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;独立运行每个线程组&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;函数测试模式&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;添加目录或jar包到classpath&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;用户定义的变量&#34;&gt;&lt;em&gt;用户定义的变量&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;当在测试计划的多个部分中存在重复的数值时，可以通过&lt;code&gt;用户定义的变量&lt;/code&gt;来提供更灵活的设置。&lt;/p&gt;
&lt;p&gt;测试计划控制面板中的&lt;code&gt;用户定义的变量&lt;/code&gt;的作用域覆盖整个测试计划。&lt;/p&gt;
&lt;p&gt;你可以通过&lt;code&gt;${变量名称}&lt;/code&gt;的方式来引用这些变量。这种方式允许你在不同的请求或操作中使用相同的数值，从而更加方便地维护和修改。&lt;/p&gt;
&lt;h3 id=&#34;示例接口代码&#34;&gt;&lt;em&gt;示例接口代码：&lt;/em&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@api.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/TestPlan/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Jmeter教程测试计划-用户定义的变量api&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ERROR: The request method is not POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;UserDefinedVariables&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ERROR: The request body is error!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Your request parameters is &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;UserDefinedVariables:&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                         &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;UserDefinedVariables&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;示例jmeter脚本&#34;&gt;&lt;em&gt;示例Jmeter脚本&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;面板中添加&lt;font style=&#34;background-color: #efef48&#34;&gt;用户定义的变量&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;UserDefinedVariables&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;值随意输入：&lt;code&gt;我是用户定义的变量&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;HTTP请求&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/TestPlan/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;POST&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;消息体数据:&lt;code&gt;{&amp;quot;UserDefinedVariables&amp;quot;:&amp;quot;${UserDefinedVariables}&amp;quot;}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;HTTP请求&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;HTTP信息头管理器&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;右键HTTP请求-添加-配置元件-HTTP信息头管理器，添加信息头，指定请求体类型&lt;/p&gt;
&lt;p&gt;名称：&lt;code&gt;Content-Type&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;值：&lt;code&gt;application/json&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;查看结果树&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/0.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/0.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/TestPlan/0.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/TestPlan/0.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;h3 id=&#34;运行查看结果树&#34;&gt;&lt;em&gt;运行，查看结果树&lt;/em&gt;&lt;/h3&gt;




&lt;style&gt;
	.massage {
		display: grid; 
		padding: 15px; 
		background-color: #f8f8f8; 
		border: 1px solid #ccc; 
		border-radius: 10px; 
		margin-bottom: 0; width: 99%;
	}
	.result-h {
		display: inline-grid;
		grid-template-columns: 10% 90%;
		border-top: 1px solid #b5b1b185;
		padding: 3% 0;
	}
&lt;/style&gt;
&lt;div class=&#34;massage&#34;&gt;
	&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span&gt;请求数据&lt;/span&gt;&lt;/div&gt;
	&lt;div class=&#34;result-h&#34;&gt;
		&lt;div style=&#34;display: grid; place-items: center;&#34;&gt;&lt;span&gt;headers&lt;/span&gt;&lt;/div&gt;
		&lt;div style=&#34;display: grid;align-items: center;padding-left: 4%;&#34;&gt;
			&lt;span&gt;Connection: keep-alive&lt;br&gt;Content-Type: application/json&lt;br&gt;Content-Length: 58&lt;br&gt;Host: 127.0.0.1:5000&lt;br&gt;User-Agent: Apache-HttpClient/4.5.14 (Java/20.0.2)&lt;/span&gt;
		&lt;/div&gt;
	&lt;/div&gt;

	&lt;div class=&#34;result-h&#34;&gt;
		&lt;div style=&#34;display: grid; place-items: center;&#34;&gt;&lt;span&gt;body&lt;/span&gt;&lt;/div&gt;
		&lt;div style=&#34;display: grid;align-items: center;padding-left: 4%;&#34;&gt;
			&lt;span&gt;POST http://127.0.0.1:5000/TestPlan/&lt;br&gt;&lt;br&gt;POST data:&lt;br&gt;&lt;br&gt;{&#34;UserDefinedVariables&#34;:&#34;&lt;font style=&#34;background-color: #ec5350; color: black;&#34;&gt;我是用户定义的变量&lt;/font&gt;&#34;}&lt;br&gt;&lt;br&gt;&lt;br&gt;[no cookies]&lt;/span&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;




&lt;style&gt;
	.massage {
		display: grid; 
		padding: 15px; 
		background-color: #f8f8f8; 
		border: 1px solid #ccc; 
		border-radius: 10px; 
		margin-bottom: 0; width: 99%;
	}
	.result-h {
		display: inline-grid;
		grid-template-columns: 10% 90%;
		border-top: 1px solid #b5b1b185;
		padding: 3% 0;
	}
&lt;/style&gt;
&lt;div class=&#34;massage&#34;&gt;
	&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span&gt;响应数据&lt;/span&gt;&lt;/div&gt;
	&lt;div class=&#34;result-h&#34;&gt;
		&lt;div style=&#34;display: grid; place-items: center;&#34;&gt;&lt;span&gt;headers&lt;/span&gt;&lt;/div&gt;
		&lt;div style=&#34;display: grid;align-items: center;padding-left: 4%;&#34;&gt;
			&lt;span&gt;HTTP/1.1 200 OK&lt;br&gt;Server: Werkzeug/3.0.1 Python/3.12.1&lt;br&gt;Date: Mon, 15 Jan 2024 06:19:08 GMT&lt;br&gt;Content-Type: application/json&lt;br&gt;Content-Length: 132&lt;br&gt;Connection: close&lt;/span&gt;
		&lt;/div&gt;
	&lt;/div&gt;

	&lt;div class=&#34;result-h&#34;&gt;
		&lt;div style=&#34;display: grid; place-items: center;&#34;&gt;&lt;span&gt;body&lt;/span&gt;&lt;/div&gt;
		&lt;div style=&#34;display: grid;align-items: center;padding-left: 4%;&#34;&gt;
			&lt;span&gt;{&#34;code&#34;: 200,&#34;data&#34;: &#34;Your request parameters is :{&#34;UserDefinedVariables:我是用户定义的变量&#34;}&#34;}&lt;/span&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/1.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/1.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/TestPlan/1.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/TestPlan/1.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;h3 id=&#34;结语&#34;&gt;&lt;em&gt;结语&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;可以清晰地看出，接口请求参数中调用了&lt;code&gt;用户定义的变量&lt;/code&gt;的值:&lt;code&gt;我是用户定义的变量&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;此外，JMeter提供的配置元件中也包含&lt;code&gt;用户定义的变量&lt;/code&gt;元件，通过&lt;code&gt;测试计划/线程组/取样器-添加-配置元件-用户定义的变量&lt;/code&gt;进行添加。用法与测试计划面板中的&lt;code&gt;用户定义的变量&lt;/code&gt;一致，不同之处在于作用域。&lt;/p&gt;
&lt;p&gt;测试计划面板中&lt;code&gt;用户定义的变量&lt;/code&gt;具有整个测试计划范围的作用，而配置元件中的&lt;code&gt;用户定义的变量&lt;/code&gt;则根据其位置确定作用范围。&lt;/p&gt;
&lt;p&gt;举例来说，在测试计划下添加的&lt;code&gt;用户定义的变量&lt;/code&gt;将在整个测试计划中生效，与测试计划面板中的&lt;code&gt;用户定义的变量&lt;/code&gt;作用范围一致。然而，如果&lt;code&gt;用户定义的变量&lt;/code&gt;位于取样器中，其作用范围将仅限于该特定取样器内。这种灵活性允许在不同配置元件中使用变量，使其作用范围更具体而有针对性。&lt;/p&gt;
&lt;p&gt;建议使用更自由的配置元件中的&lt;code&gt;用户定义的变量&lt;/code&gt; 。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;独立运行每个线程组&#34;&gt;&lt;em&gt;独立运行每个线程组&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;当一个测试计划下有多个线程组时，且这些线程组都处于执行状态时，可能会使用测试计划中的&lt;code&gt;独立运行每个线程组&lt;/code&gt;勾选框，以防止各个线程组之间相互影响。&lt;/p&gt;
&lt;p&gt;在这种情况下，通过勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;，确保每个线程组在执行时都是相互独立的。这意味着它们将不会共享任何变量或资源，从而避免潜在的相互干扰。&lt;/p&gt;
&lt;p&gt;这个选项的使用对于模拟多个并发场景或测试不同业务流程的情况非常重要。它确保每个线程组在测试计划中都能够独立运行，从而更准确地模拟真实世界的使用情境，提高测试的可靠性和准确性。&lt;/p&gt;
&lt;h3 id=&#34;示例接口代码-1&#34;&gt;&lt;em&gt;示例接口代码&lt;/em&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@api.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/TestPlan1/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;# 接口设置了休眠三秒，即接口在接收到请求数据三秒后，返回响应数据。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; 请求方式错误！&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;处理完毕&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;示例jmeter脚本-1&#34;&gt;&lt;em&gt;示例Jmeter脚本&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加两个&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;名称依次为：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;两个&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;下皆添加&lt;font style=&#34;background-color: #efef48&#34;&gt;取样器&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;名称与对应线程组一致：&lt;code&gt;线程组1&lt;/code&gt;、&lt;code&gt;线程组2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址一致：&lt;code&gt;HTTP://127.0.0.1:5000/TestPlan1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式一致：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;查看结果树&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;运行查看结果树-1&#34;&gt;&lt;em&gt;运行，查看结果树&lt;/em&gt;&lt;/h3&gt;
&lt;h4 id=&#34;不勾选独立运行每个线程组运行结果&#34;&gt;&lt;em&gt;不勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;，运行结果&lt;/em&gt;&lt;/h4&gt;



&lt;style&gt;
	.sampler {
		display: grid; 
		padding: 15px; 
		background-color: #f8f8f8; 
		border: 1px solid #ccc; 
		border-radius: 10px; 
		margin-bottom: 0; width: 99%;
	}
	.sampler-h {
		border-top: 1px solid #b5b1b185;
		padding: 3% 0;

	}
	
	.sampler-h span {
		margin-left: 15%;
		display: inline-block;  
	}	

&lt;/style&gt;
&lt;div class=&#34;sampler&#34;&gt;
	&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span&gt;线程组1的取样器结果&lt;/span&gt;&lt;/div&gt;
	&lt;div class=&#34;sampler-h&#34;&gt;
			&lt;span&gt;hread Name:线程组1 1-1&lt;br&gt;Sample Start: &lt;font style=&#34;background-color: #ec5350; color: black;&#34;&gt;2024-01-16 11:19:34 CST&lt;/font&gt;&lt;br&gt;Load time:3004&lt;br&gt;Connect Time:1&lt;br&gt;Latency:3004&lt;br&gt;Size in bytes:231&lt;br&gt;Sent bytes:210&lt;br&gt;Headers size in bytes:165&lt;br&gt;Body size in bytes:66&lt;br&gt;Sample Count:1&lt;br&gt;Error Count:0&lt;br&gt;Data type (&#34;text&#34;|&#34;bin&#34;|&#34;&#34;):text&lt;br&gt;Response code:200&lt;br&gt;Response message:OK&lt;/span&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;



&lt;style&gt;
	.sampler {
		display: grid; 
		padding: 15px; 
		background-color: #f8f8f8; 
		border: 1px solid #ccc; 
		border-radius: 10px; 
		margin-bottom: 0; width: 99%;
	}
	.sampler-h {
		border-top: 1px solid #b5b1b185;
		padding: 3% 0;

	}
	
	.sampler-h span {
		margin-left: 15%;
		display: inline-block;  
	}	

&lt;/style&gt;
&lt;div class=&#34;sampler&#34;&gt;
	&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span&gt;线程组2的取样器结果&lt;/span&gt;&lt;/div&gt;
	&lt;div class=&#34;sampler-h&#34;&gt;
			&lt;span&gt;hread Name:线程组2 2-1&lt;br&gt;Sample Start: &lt;font style=&#34;background-color: #ec5350; color: black;&#34;&gt;2024-01-16 11:19:34 CST&lt;/font&gt;&lt;br&gt;Load time:3003&lt;br&gt;Connect Time:1&lt;br&gt;Latency:3003&lt;br&gt;Size in bytes:231&lt;br&gt;Sent bytes:210&lt;br&gt;Headers size in bytes:165&lt;br&gt;Body size in bytes:66&lt;br&gt;Sample Count:1&lt;br&gt;Error Count:0&lt;br&gt;Data type (&#34;text&#34;|&#34;bin&#34;|&#34;&#34;):text&lt;br&gt;Response code:200&lt;br&gt;Response message:OK&lt;/span&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/2.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/2.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/TestPlan/2.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/TestPlan/2.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Sample Start 是请求发出的时间，可以观察到两个线程组内的 HTTP 请求在同一时刻发出，即 &lt;code&gt;2024-01-16 11:19:34&lt;/code&gt;。因为两个线程组是并发、随机执行的。&lt;/p&gt;
&lt;h4 id=&#34;勾选独立运行每个线程组运行结果&#34;&gt;&lt;em&gt;勾选&lt;code&gt;独立运行每个线程组&lt;/code&gt;，运行结果&lt;/em&gt;&lt;/h4&gt;



&lt;style&gt;
	.sampler {
		display: grid; 
		padding: 15px; 
		background-color: #f8f8f8; 
		border: 1px solid #ccc; 
		border-radius: 10px; 
		margin-bottom: 0; width: 99%;
	}
	.sampler-h {
		border-top: 1px solid #b5b1b185;
		padding: 3% 0;

	}
	
	.sampler-h span {
		margin-left: 15%;
		display: inline-block;  
	}	

&lt;/style&gt;
&lt;div class=&#34;sampler&#34;&gt;
	&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span&gt;线程组1的取样器结果&lt;/span&gt;&lt;/div&gt;
	&lt;div class=&#34;sampler-h&#34;&gt;
			&lt;span&gt;hread Name:线程组1 1-1&lt;br&gt;Sample Start: &lt;font style=&#34;background-color: #ec5350; color: black;&#34;&gt;2024-01-16 11:32:52 CST&lt;/font&gt;&lt;br&gt;Load time:3004&lt;br&gt;Connect Time:1&lt;br&gt;Latency:3004&lt;br&gt;Size in bytes:231&lt;br&gt;Sent bytes:210&lt;br&gt;Headers size in bytes:165&lt;br&gt;Body size in bytes:66&lt;br&gt;Sample Count:1&lt;br&gt;Error Count:0&lt;br&gt;Data type (&#34;text&#34;|&#34;bin&#34;|&#34;&#34;):text&lt;br&gt;Response code:200&lt;br&gt;Response message:OK&lt;/span&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;



&lt;style&gt;
	.sampler {
		display: grid; 
		padding: 15px; 
		background-color: #f8f8f8; 
		border: 1px solid #ccc; 
		border-radius: 10px; 
		margin-bottom: 0; width: 99%;
	}
	.sampler-h {
		border-top: 1px solid #b5b1b185;
		padding: 3% 0;

	}
	
	.sampler-h span {
		margin-left: 15%;
		display: inline-block;  
	}	

&lt;/style&gt;
&lt;div class=&#34;sampler&#34;&gt;
	&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span&gt;线程组2的取样器结果&lt;/span&gt;&lt;/div&gt;
	&lt;div class=&#34;sampler-h&#34;&gt;
			&lt;span&gt;hread Name:线程组2 2-1&lt;br&gt;Sample Start: &lt;font style=&#34;background-color: #ec5350; color: black;&#34;&gt;2024-01-16 11:32:55 CST&lt;/font&gt;&lt;br&gt;Load time:3003&lt;br&gt;Connect Time:1&lt;br&gt;Latency:3003&lt;br&gt;Size in bytes:231&lt;br&gt;Sent bytes:210&lt;br&gt;Headers size in bytes:165&lt;br&gt;Body size in bytes:66&lt;br&gt;Sample Count:1&lt;br&gt;Error Count:0&lt;br&gt;Data type (&#34;text&#34;|&#34;bin&#34;|&#34;&#34;):text&lt;br&gt;Response code:200&lt;br&gt;Response message:OK&lt;/span&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/3.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/3.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/TestPlan/3.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/TestPlan/3.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;Sample Start 是请求发出的时间，可以观察到两个线程组内的 HTTP 请求并非在同一时刻发出。具体而言，HTTP 请求1的请求发出时间是 &lt;code&gt;2024-01-16 11:32:52&lt;/code&gt;，而 HTTP 请求2的请求发出时间是 &lt;code&gt;2024-01-16 11:32:55&lt;/code&gt;。两者之间的时间差正好为三秒，与接口休眠的三秒相符，这表明两个线程组是顺序执行的。&lt;/p&gt;
&lt;h3 id=&#34;结语-1&#34;&gt;&lt;em&gt;结语&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;当勾选了&lt;code&gt;独立运行每个线程组&lt;/code&gt;选项时，能够确保测试计划中的相同类型线程组按照顺序执行。在某些特定的测试情况下，这个选项非常有用。相反，若未勾选 &lt;code&gt;独立运行每个线程组&lt;/code&gt;时，线程组是并发执行。&lt;/p&gt;
&lt;p&gt;但线程组中的多个取样器并不会并发，而是在较短时间内发出全部请求，尤其是在取样器数量较多的情况下。&lt;/p&gt;
&lt;p&gt;因此，在模拟高并发时，如果需要多线程组、所有取样器请求并发，建议在测试计划中添加&lt;code&gt;同步定时器（Synchronizing Timer）&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;同步定时器（Synchronizing Timer）&lt;/code&gt;可以确保在并发场景下的同一时间点触发多个线程组中多个取样器的请求，以更真实地模拟多用户同时访问系统的情况。这样的设置有助于提高测试的准确性和可靠性，使测试更符合实际应用场景。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;主线程结束后运行teardown线程组&#34;&gt;&lt;em&gt;主线程结束后运行tearDown线程组&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;该选项主要适用于在取样器错误后配置的普通线程，并指定了在错误发生后要执行的动作，如停止测试或立即停止测试。&lt;/p&gt;
&lt;p&gt;勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;后，当普通线程由于取样器错误而导致线程结束执行时，系统会继续执行 tearDown 线程。这意味着即使在测试中发生了错误，系统仍会在整个测试结束前执行 tearDown 线程，以确保在测试运行结束时执行一些清理或必要的操作。&lt;/p&gt;
&lt;p&gt;需要注意的是，在 JMeter 中，普通线程组的执行优先级大于 tearDown 线程组，因此 tearDown 线程组将会等待所有普通线程组执行完毕后才会执行。&lt;/p&gt;
&lt;p&gt;这一设置非常有用，可以确保在测试过程中出现错误时执行必要的清理步骤，同时允许根据具体情况选择在错误发生后是立即停止测试还是允许测试计划中其他线程组或线程继续执行。&lt;/p&gt;
&lt;h3 id=&#34;示例接口代码-2&#34;&gt;&lt;em&gt;示例接口代码&lt;/em&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@api.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/TestPlan1/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testplan1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;# 接口设置了休眠三秒，即接口在接收到请求数据三秒后，返回响应数据。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; 请求方式错误！&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;处理完毕&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;示例jmeter脚本-2&#34;&gt;&lt;em&gt;示例Jmeter脚本&lt;/em&gt;*&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;在取样器错误后要执行的动作,勾选&lt;code&gt;停止测试&lt;/code&gt;或&lt;code&gt;立即停止测试&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;tearDown线程组&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;和&lt;font style=&#34;background-color: #efef48&#34;&gt;tearDown线程组&lt;/font&gt;下添加同样的&lt;font style=&#34;background-color: #efef48&#34;&gt;http请求&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;名称分别为：&lt;code&gt;线程组请求&lt;/code&gt;，&lt;code&gt;tearDown线程组请求&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/TestPlan1/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组请求&lt;/font&gt;取样器下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;响应断言&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;添加，输入值：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;查看结果树&lt;/font&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS：响应断言用于匹配实际响应信息，作为验证接口响应的一种手段。例如，示例接口响应的是 &lt;code&gt;{&#39;code&#39;: 200, &#39;data&#39;: &#39;处理完毕&#39;}&lt;/code&gt;，而添加的断言是 &lt;code&gt;1111&lt;/code&gt;，这两者无法匹配，则可以判断该取样器请求存在错误。&lt;/p&gt;
&lt;h3 id=&#34;运行查看结果树-2&#34;&gt;&lt;em&gt;运行，查看结果树&lt;/em&gt;&lt;/h3&gt;
&lt;h4 id=&#34;不勾选主线程结束后运行teardown线程组运行结果&#34;&gt;&lt;em&gt;不勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;，运行结果&lt;/em&gt;&lt;/h4&gt;




&lt;style&gt;
	.massage {
		display: grid; 
		padding: 15px; 
		background-color: #f8f8f8; 
		border: 1px solid #ccc; 
		border-radius: 10px; 
		margin-bottom: 0; width: 99%;
	}
	.result-h {
		display: inline-grid;
		grid-template-columns: 10% 90%;
		border-top: 1px solid #b5b1b185;
		padding: 3% 0;
	}
&lt;/style&gt;
&lt;div class=&#34;massage&#34;&gt;
	&lt;div style=&#34;text-align: center;&#34;&gt;&lt;span&gt;响应数据&lt;/span&gt;&lt;/div&gt;
	&lt;div class=&#34;result-h&#34;&gt;
		&lt;div style=&#34;display: grid; place-items: center;&#34;&gt;&lt;span&gt;headers&lt;/span&gt;&lt;/div&gt;
		&lt;div style=&#34;display: grid;align-items: center;padding-left: 4%;&#34;&gt;
			&lt;span&gt;HTTP/1.1 200 OK&lt;br&gt;Server: Werkzeug/3.0.1 Python/3.12.1&lt;br&gt;Date: Fri, 16 Jan 2024 14:52:02 GMT&lt;br&gt;Content-Type: application/json&lt;br&gt;Content-Length: 47&lt;br&gt;Connection: close&lt;/span&gt;
		&lt;/div&gt;
	&lt;/div&gt;

	&lt;div class=&#34;result-h&#34;&gt;
		&lt;div style=&#34;display: grid; place-items: center;&#34;&gt;&lt;span&gt;body&lt;/span&gt;&lt;/div&gt;
		&lt;div style=&#34;display: grid;align-items: center;padding-left: 4%;&#34;&gt;
			&lt;span&gt; &lt;font style=&#34;background-color: #ec5350; color: black;&#34;&gt;{&#34;code&#34;: 200,&#34;data&#34;: &#34;处理完毕&#34;}&lt;/font&gt;&lt;/span&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/4.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/4.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/TestPlan/4.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/TestPlan/4.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;因为不勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;，而且响应体&lt;code&gt;{&amp;quot;code&amp;quot;: 200,&amp;quot;data&amp;quot;: &amp;quot;处理完毕&amp;quot;}&lt;/code&gt;与断言&lt;code&gt;1111&lt;/code&gt;无法匹配，响应断言判断该取样器请求发生错误，所以只有线程组被执行完毕后，而 tearDown 线程组并未被执行。&lt;/p&gt;
&lt;p&gt;此时，修改响应断言为：&lt;code&gt;{&amp;quot;code&amp;quot;:200,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再运行。&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/5.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/5.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/TestPlan/5.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/TestPlan/5.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;即使不勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;，因为响应体&lt;code&gt;{&amp;quot;code&amp;quot;: 200,&amp;quot;data&amp;quot;: &amp;quot;处理完毕&amp;quot;}&lt;/code&gt;与断言&lt;code&gt;{&amp;quot;code&amp;quot;:200,&lt;/code&gt;匹配，响应断言判断该取样器请求正常，所以线程组被执行完毕后，执行 tearDown 线程组。&lt;/p&gt;
&lt;h4 id=&#34;勾选主线程结束后运行teardown线程组运行结果&#34;&gt;&lt;em&gt;勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;,运行结果&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;响应断言改回为：&lt;code&gt;1111&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/6.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/TestPlan/6.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/TestPlan/6.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/TestPlan/6.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;即使响应断言判断请求发生错误，因为勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;,线程组被执行后，tearDown 线程组紧接被执行。&lt;/p&gt;
&lt;h3 id=&#34;结语-2&#34;&gt;&lt;em&gt;结语&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;在确保测试环境的可靠性和稳定性方面，通过勾选&lt;code&gt;主线程结束后运行tearDown线程组&lt;/code&gt;以及配置线程组中的取样器错误后执行的动作，可以在主线程结束后执行 tearDown 线程组，从而进行一些关键的清理和还原操作。这一设置在测试流程中发生错误或异常情况时，能够确保系统状态的正确还原，为后续测试提供稳定的基础。&lt;/p&gt;
&lt;p&gt;具体而言，主线程结束后执行 tearDown 线程组的步骤可以被理解为测试执行的最后一道关口，确保在测试结束时执行特定的操作。通过配置线程组中的取样器错误后执行的动作，例如&lt;code&gt;停止测试&lt;/code&gt;或&lt;code&gt;立即停止测试&lt;/code&gt;，可以更加灵活地处理测试中的异常情况。&lt;/p&gt;
&lt;p&gt;这样的设置在以下方面发挥关键作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;环境清理： tearDown 线程组可以包含用于清理测试过程中创建的临时数据、资源或连接的操作。这有助于保持测试环境的整洁和可重复性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;资源释放： 如果测试过程中涉及到占用系统资源的操作，例如文件打开、网络连接等，tearDown 线程组可以负责释放这些资源，避免资源泄露和系统负担。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据还原： 在测试期间可能对数据库或配置文件进行了修改，tearDown 线程组可以负责将这些更改还原，确保下一次测试能够在干净的环境中进行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;错误处理： 配置线程组中的取样器错误后执行的动作可以根据具体需求选择停止测试或立即停止测试。这样的灵活性使得能够在测试遇到问题时及时采取适当的措施，防止进一步的不稳定性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过精心配置这些选项，可以确保测试系统的可靠性和稳定性，同时为测试人员提供了在测试结束时进行必要清理和还原操作的机会，以确保下一次测试能够在一致的基础上进行。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;函数测试模式&#34;&gt;&lt;em&gt;函数测试模式&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;若选择了此选项，并且监听组件（比如“查看结果树”）配置了将结果保存到文件中，JMeter将每次的请求结果记录到文件中。值得注意的是，这种做法相对消耗资源，在负载测试中并不建议勾选。然而，在平时脚本调试的情况下，可以考虑启用该选项。&lt;/p&gt;
&lt;p&gt;这样的设置主要适用于需要详细记录每次请求结果的情况，以便后续分析或排查问题。在负载测试中，由于可能生成大量的结果数据，将其全部保存到文件可能导致性能和资源开销的增加，因此需要谨慎使用。&lt;/p&gt;
&lt;p&gt;总体而言，这一功能的选择应该根据具体需求和测试目标来决定。在进行性能测试时，特别是在高并发负载下，建议避免勾选该选项以保持测试的高效性。然而，在脚本开发和调试阶段，启用此选项可以帮助更全面地了解每次请求的细节，有助于及时发现和解决问题。&lt;/p&gt;
&lt;p&gt;实际应用场景相对有限，因此在本文中不进行详细演示。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;添加目录或jar包到classpath&#34;&gt;&lt;em&gt;添加目录或jar包到classpath&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;添加文件或 JAR 包功能主要用于调用外部的 JAR 包。当脚本需要引用外部的 Java 文件或 JAR 包时，可以通过将 JAR 包的路径添加到此功能中。这样，在 Beanshell 脚本中就可以通过 import 语句导入外部 JAR 包，并直接调用其中的方法。&lt;/p&gt;
&lt;p&gt;在后续的内容中，当涉及到 Beanshell 时，将详细阐述如何使用这一功能。这个特性提供了一种扩展 JMeter 功能的途径，使得用户可以方便地集成和调用外部 Java 类库，从而实现更复杂和灵活的测试脚本。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;em&gt;总结&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;JMeter的测试计划是测试工作的主要组织结构，它定义了测试的执行流程、配置和执行的参数。在测试计划中，包括了多个关键组件，如线程组、tearDown线程组、HTTP取样器、响应断言等，它们构成了一个完整的测试计划。&lt;/p&gt;
&lt;p&gt;当你执行测试时，添加的所有所需组件和元件组成了一个有机整体，即一个完整的测试计划。这个测试计划反映了你对系统性能和功能的验证方式以及测试场景的设计。&lt;/p&gt;
&lt;p&gt;本篇主要探讨了测试计划组件面板中各元素的使用，这包括了配置用户定义的变量、定义并发用户行为的线程组、定义进测试后清理的tearDown线程组，这些元素的组合和配置，直接影响着测试的有效性和准确性。&lt;/p&gt;
&lt;p&gt;在JMeter中，设计一个强大且高效的测试计划需要综合考虑系统特性、测试目标和性能需求。合理配置这些组件，有效运用各种元素，是确保测试计划成功执行和提取有价值信息的关键步骤。&lt;/p&gt;
&lt;p&gt;在下一篇章中，EtherealBoyJiang将引领读者深入探讨线程组的重要性和使用方法。线程组作为JMeter测试计划的核心组件之一，对于模拟并发用户的行为至关重要。&lt;/p&gt;
&lt;div&gt;&lt;hr&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Jmeter环境配置</title>
        <link>http://localhost:1313/Jiang/p/jmeter%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/Jiang/p/jmeter%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;img src="http://localhost:1313/Jiang/img/Jmeter/0.png" alt="Featured image of post Jmeter环境配置" /&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h1 id=&#34;jmeter-环境安装及配置&#34;&gt;JMeter 环境安装及配置&lt;/h1&gt;
&lt;p&gt;在使用 JMeter 之前，需要配置相应的环境，包括安装JDK和JMeter。&lt;/p&gt;
&lt;p&gt;首先，了解一下JDK，它就是Java的开发工具包。&lt;/p&gt;
&lt;p&gt;JMeter 是使用 Java 编写的。一般来说，只需要安装 JRE（Java 运行时环境）就可以运行 JMeter，因为 JRE 包含了运行 Java 应用程序所需的组件。那么为什么建议安装 JDK 呢？&lt;/p&gt;
&lt;p&gt;如果你想要在 JMeter 中使用一些插件、进行脚本开发、编译测试计划等高级功能，安装 JDK 可能会更有帮助，因为 JDK 包含了 JRE，并且还提供了编译 Java 代码所需的工具，比如 javac。此外，一些场景下，比如进行 HTTPS 压力测试，需要使用 JDK 中的 keytool 工具。&lt;/p&gt;
&lt;p&gt;确保正确配置JDK和JMeter环境，可以让你更灵活地应对不同的测试需求&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;jdk&#34;&gt;&lt;em&gt;JDK&lt;/em&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1下载jdk&#34;&gt;&lt;em&gt;1.下载JDK&lt;/em&gt;&lt;/h3&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://www.oracle.com/java/technologies/downloads/#jdk21-windows&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://www.oracle.com/java/technologies/downloads/#jdk21-windows&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;JDK下载地址&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;示例环境为Windows，读者应根据实际环境下载JDK的安装包。推荐下载exe文件，安装方便快捷。&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://www.oracle.com/java/technologies/downloads/#jdk21-windows&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fwww.oracle.com%2fjava%2ftechnologies%2fdownloads%2f%23jdk21-windows&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/1.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/1.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/1.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/1.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;2安装jdk&#34;&gt;&lt;em&gt;2.安装JDK&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;建议在安装之前在&lt;code&gt;D盘或C盘&lt;/code&gt;下新建一个下新建一个&lt;code&gt;Tools&lt;/code&gt; 文件夹。在安装 JDK 时，修改安装目录为&lt;code&gt;Tools&lt;/code&gt;文件夹。这样做的好处在于方便管理和配置环境变量。&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/2.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/2.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/2.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/2.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/3.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/3.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/3.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/3.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;接下来就是一直下一步就行。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;配置jdk系统变量环境变量&#34;&gt;&lt;em&gt;配置JDK系统变量、环境变量&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;系统变量和环境变量是计算机系统中的两个重要概念，它们用于存储和管理系统或应用程序运行过程中需要使用的信息。&lt;/p&gt;
&lt;p&gt;系统变量是指在操作系统级别上设置的一些全局信息，用于控制和影响整个计算机系统的行为。
这些变量通常由操作系统或系统管理员配置，用于存储系统范围的配置参数和信息。系统变量可以影响所有用户和应用程序的行为。
如&lt;code&gt;PATH&lt;/code&gt;是一个常见的系统变量，它存储了操作系统在哪些目录中查找可执行文件的信息。&lt;/p&gt;
&lt;p&gt;环境变量是在操作系统或应用程序运行过程中设置的一些动态变量，用于影响当前进程的行为。
环境变量提供了一种将信息传递给正在运行的程序的方法，以便程序根据这些变量的值来调整其行为。
如&lt;code&gt;PATH&lt;/code&gt;变量中的值就是执行文件的环境变量。&lt;/p&gt;
&lt;p&gt;系统变量是操作系统级别的全局配置，而环境变量是在运行过程中用于传递信息给正在执行的程序的配置。在许多情况下，环境变量的值可以由用户或程序员进行配置，以影响特定应用程序或进程的行为。&lt;/p&gt;
&lt;div&gt;  




&lt;div style=&#34;display: inline-grid; grid-template-columns: 7% 93%; padding: 15px; background-color: #f8f8f8; border: 1px solid #ccc; border-radius: 10px; margin-bottom: 0; width: 99%;&#34;&gt;
    &lt;div style=&#34;display: flex; align-items: center; justify-content: center;&#34;&gt;
        &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon icon-tabler icon-tabler-alert-square-rounded&#34; width=&#34;44&#34; height=&#34;44&#34; viewBox=&#34;0 0 24 24&#34; stroke-width=&#34;1.5&#34; stroke=&#34;#ff2825&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34;&gt;
            &lt;path stroke=&#34;none&#34; d=&#34;M0 0h24v24H0z&#34; fill=&#34;none&#34;/&gt;
            &lt;path d=&#34;M12 3c7.2 0 9 1.8 9 9s-1.8 9 -9 9s-9 -1.8 -9 -9s1.8 -9 9 -9z&#34; /&gt;
            &lt;path d=&#34;M12 8v4&#34; /&gt;
            &lt;path d=&#34;M12 16h.01&#34; /&gt;
        &lt;/svg&gt;
    &lt;/div&gt;

    &lt;div style=&#34;display: flex; align-items: center; justify-content: flex-start; margin-left: 15px; font-size: 1.5rem; width: 100%; height: 100%;&#34;&gt;
不要随意改动环境变量，否则可能造成系统死机。
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h4 id=&#34;新建java_home系统变量&#34;&gt;&lt;em&gt;新建JAVA_HOME系统变量&lt;/em&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;右键此电脑-属性-高级系统设置-环境变量，系统变量-新建。&lt;/p&gt;
&lt;p&gt;变量名：&lt;code&gt;JDK&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;变量值：&lt;code&gt;C:\Tools\JDK&lt;/code&gt;（JDK安装目录）  或者浏览目录进行选择（Windows11）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/4.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/4.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/4.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/4.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h4 id=&#34;path中新建java_home的环境环境&#34;&gt;&lt;em&gt;Path中新建JAVA_HOME的环境环境&lt;/em&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;系统变量中找到Path，选中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击编辑，进入Path系统变量窗口，新建两条环境变量。&lt;/p&gt;
&lt;p&gt;第一条：&lt;code&gt;%JAVA_HOME%\bin;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第二条：&lt;code&gt;%JAVA_HOME%\jre\bin;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ps：windows11好像不需要输入最后的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一路确定&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/5.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/5.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/5.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/5.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;jmeter&#34;&gt;&lt;em&gt;Jmeter&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;JMeter 是一个独立的 Java 应用程序，它不依赖于系统注册表或其他系统级配置。所以它能够在不同操作系统上运行而无需进行安装。只需要下载完成后，将 ZIP 文件解压缩到指定的目录。
在解压缩后的目录中找到 JMeter 启动脚本（例如 windows的jmeter.bat 或 Linux的jmeter.sh），运行该脚本以启动 JMeter。&lt;/p&gt;
&lt;h3 id=&#34;下载jmeterzip包&#34;&gt;&lt;em&gt;下载JmeterZIP包&lt;/em&gt;&lt;/h3&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://archive.apache.org/dist/jmeter/binaries/&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://archive.apache.org/dist/jmeter/binaries/&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;历史版本Jmeter下载地址&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;示例环境为Windows，读者应根据实际系统环境及JDK版本，下载Jmeter的安装包。下载页面写有JDK版本要求。Windows环境推荐zip包，Linux环境推荐tgz包。&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://archive.apache.org/dist/jmeter/binaries/&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2farchive.apache.org%2fdist%2fjmeter%2fbinaries%2f&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/6.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/6.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/6.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/6.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;
&lt;a1 href=&#34;https://jmeter.apache.org/download_jmeter.cgi&#34; target=&#34;_blank&#34;&gt;
    &lt;div class=&#34;zhengti&#34;&gt;
        &lt;a href=&#34;https://jmeter.apache.org/download_jmeter.cgi&#34;&gt;
            &lt;div class=&#34;wenzi&#34;&gt;
                &lt;div class=&#34;linkk&#34;&gt;
                    &lt;div class=&#34;namee&#34;&gt;最新版本Jmeter下载地址&lt;/div&gt;&lt;div class=&#34;descc&#34;&gt;示例环境为Windows，读者应根据实际系统环境及JDK版本，下载Jmeter的安装包。下载页面写有JDK版本要求。Windows环境推荐zip包，Linux环境推荐tgz包。&lt;/div&gt;&lt;/div&gt;
        &lt;/a&gt;&lt;div class=&#34;linktext&#34;&gt;https://jmeter.apache.org/download_jmeter.cgi&lt;/div&gt;

        &lt;/div&gt;
        &lt;div class=&#34;daimg&#34;&gt;
            &lt;img class=&#34;link-card-img&#34; loading=&#34;lazy&#34; src=&#34;https://api.thumbnail.ws/api/ab41148c7048bd95441b7b09816cbd5db1ed220134d3/thumbnail/get?width=720&amp;url=https%3a%2f%2fjmeter.apache.org%2fdownload_jmeter.cgi&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/a1&gt;

&lt;style&gt;
    a1 {
        display: flex;
        flex-direction: column;
    }
    
    .zhengti {
        margin: auto;
        padding-top: 4%;
        padding-right: 4%;
        padding-bottom: 4%;
        padding-left: 4%;
        width: 100%;
        display: flex;
        align-items: left;
        flex-direction: row;
        border: 1px solid #e5e7eb;
        border-radius: 20px;
        background-color: #ffffff;
        transition: border 0.3s ease-in-out;
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .wenzi {
        display: flex;
        align-items: left;
        flex-direction: column;
        flex: 2;
    }
    
    .zhengti:hover {
        transform: scale(1.03);
        box-shadow: 2px 4px 16px rgba(0, 0, 0, .05);
    }
    
    .linkk {
        display: flex;
        flex-direction: column;
    }
    
    .iconn {
        display: flex;
        align-items: center;
    }
    
    .iconn1 {
        width: 1.2em;
        height: 1.2em;
        margin-right: 0.5em;
        margin-bottom: 0.2em;
    }
    
    .namee {
        font-size: 1.7rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: var(--card-text-color-main);
    }
    
    .descc {
        font-size: 1.3rem;
        color: #9ca3af;
        margin-bottom: 0.5rem;
    }
    
    .linktext {
        font-size: 0.9rem;
        color: #9ca3af;
    }
     
    
    .link-card-icoon {
        width: 16px;
        height: 16px;
        margin-right: 0.5rem;
    }
     
    
    .daimg {
        display: flex;
        flex-direction: row;
        flex: 1;
        align-self: right;
    }
    
    .link-card-img {
        display: block;
        height: auto;
        max-height: 200px;
        width: 100%;
         
        object-fit: cover;
        max-width: 50%;
        margin-right: 2px;
        border-radius: 0.25rem;
    }
    
    a1:hover {
        background-color: var(--color-zoom-bg);
        border: 1px solid var(--theme);
    }
    
    @media (max-width:900px) {
        a1 {
            max-height: 25em;
            overflow-y: auto;
            padding-right: 4%;
        }
        .zhengti {
            display: flex;
            flex-direction: column;
        }
    }
    
    [data-scheme=&#34;dark&#34;] {
        .zhengti {
            background-color: #161b22;
            border: 1px solid #30363d;
        }
        .descc {
            color: #9ca3af;
        }
        .linktext {
            color: #9ca3af;
        }
    }
&lt;/style&gt;

&lt;br&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/7.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/7.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/7.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/7.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;解压到目录&#34;&gt;&lt;em&gt;解压到目录&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;建议解压到D:\Tools目录下，方便管理。&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/8.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/8.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/8.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/8.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;汉化jmeter界面&#34;&gt;&lt;em&gt;汉化Jmeter界面&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;编辑Jmeter/bin/jmeter.properties，40行增加&lt;code&gt;language=zh_CN&lt;/code&gt;，然后保存。&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/9.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/9.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/9.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/9.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;发送启动文件到桌面快捷方式&#34;&gt;&lt;em&gt;发送启动文件到桌面快捷方式&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/10.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/10.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/10.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/10.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;启动jmeter&#34;&gt;&lt;em&gt;启动Jmeter&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;双击桌面上的 JMeter 快捷方式，等待脚本运行，然后 JMeter 界面将会显示出来。&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/11.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/11.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/11.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/11.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h2 id=&#34;快速使用&#34;&gt;&lt;em&gt;快速使用&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;我们可以使用最简单的JMeter脚本来快速进行一次接口请求。这个脚本包括测试计划、线程组、取样器（Sampler）以及查看结果器（View Results Tree）。&lt;/p&gt;
&lt;p&gt;在测试计划中，我们定义了整个测试的基本设置。线程组用于模拟用户，而取样器则代表了具体的请求。查看结果器则用于查看请求的详细结果。&lt;/p&gt;
&lt;p&gt;通过这个简单的脚本，我们能够迅速进行一次接口请求测试。&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;示例接口&#34;&gt;&lt;em&gt;示例接口&lt;/em&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nd&#34;&gt;@api.route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/QuickUse/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;quickuse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# Jmeter教程快速开始api&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;method&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ERROR: The request method is not GET!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jsonify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;It is successful!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;h3 id=&#34;示例jmeter脚本&#34;&gt;&lt;em&gt;示例Jmeter脚本&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;右键测试计划-添加-线程（用户）-线程组&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;测试计划&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;查看结果树&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;右键测试计划-添加-监听器-查看结果树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;font style=&#34;background-color: #efef48&#34;&gt;线程组&lt;/font&gt;下添加&lt;font style=&#34;background-color: #efef48&#34;&gt;HTTP请求&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;右键线程组-添加-取样器-HTTP请求&lt;/p&gt;
&lt;p&gt;请求地址：&lt;code&gt;HTTP://127.0.0.1:5000/QuickUse/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;请求方式：&lt;code&gt;GET&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/12.png&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/12.png&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/12.png&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/12.png&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;h3 id=&#34;运行点击上方绿色三角形查看结果树&#34;&gt;&lt;em&gt;运行（点击上方绿色三角形），查看结果树&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/1.gif&#34; class=&#34;fancybox&#34; data-fancybox=&#34;gallery&#34; data-caption=&#34;&#34;&gt;
	&lt;img src=&#34;http://localhost:1313/Jiang/Jiang/img/Jmeter/EnvConfig/1.gif&#34;
		
		
		
		loading=&#34;lazy&#34;
		
		
	&gt;
&lt;/a&gt;


&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;img/Jmeter/EnvConfig/1.gif&#34;&gt;
&lt;img src=&#34;img/Jmeter/EnvConfig/1.gif&#34; alt=&#34;&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;请求成功。请求数据中，包括&lt;code&gt;Request Headers 请求头&lt;/code&gt;和&lt;code&gt;Request Body 请求体&lt;/code&gt;。响应数据中，包括&lt;code&gt;Response Headers 响应头&lt;/code&gt;和&lt;code&gt;Response Body 响应体&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;此次请求的响应体数据为 &lt;font style=&#34;background-color: #fbe5e1; color:#c0341d;&#34;&gt;{&amp;ldquo;code&amp;rdquo;: 200, &amp;ldquo;data&amp;rdquo;: &amp;ldquo;It is successful!&amp;rdquo;}&lt;/font&gt;&lt;/p&gt;
&lt;div&gt;&lt;br&gt;&lt;hr&gt;&lt;/div&gt;
</description>
        </item>
        
    </channel>
</rss>
